{"version":3,"file":"fwc-chip-list.js","sourceRoot":"","sources":["fwc-chip-list.ts"],"names":[],"mappings":"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","sourcesContent":["import { TemplateResult, html, css, LitElement } from 'lit';\nimport { msg } from '@lit/localize';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\nimport { query } from 'lit/decorators/query.js';\nimport { state } from 'lit/decorators/state.js';\nimport { Menu } from '@material/mwc-menu';\n\nimport '@material/mwc-list/mwc-list-item';\nimport '@material/mwc-menu';\nimport '@fortit/fwc-chip';\n\n@customElement('fwc-chip-list')\nexport class ChipList extends LitElement {\n  static styles = [\n    css`\n      :host {\n        display: block;\n        width: 100%;\n        --input-width: 160px;\n        --mdc-menu-min-width: 100%;\n      }\n\n      .container {\n        position: relative;\n        display: flex;\n        flex-wrap: wrap;\n        gap: 8px;\n        padding: 5px 0 4px 0;\n        border-bottom-width: 1px;\n        border-bottom-style: solid;\n        border-bottom-color: rgba(0, 0, 0, 0.12);\n      }\n\n      .container:hover {\n        border-bottom-color: var(--mdc-theme-primary);\n      }\n\n      .input {\n        border: none;\n        outline: none;\n        padding: 7px 0;\n        width: var(--input-width);\n      }\n\n      mwc-menu {\n        position: absolute;\n        left: 0;\n        right: 0;\n        bottom: -1px;\n      }\n\n      .chip {\n        display: flex;\n        max-width: var(--chip-max-width, 160px);\n        border-radius: 16px;\n        padding: 4px 6px 4px 8px;\n        align-items: center;\n        background-color: #232f341f;\n      }\n\n      .chip mwc-icon {\n        --mdc-icon-size: 20px;\n      }\n\n      .chip mwc-icon-button {\n        display: flex;\n      }\n\n      .chip mwc-icon-button[icon='cancel'] {\n        --mdc-icon-size: 18px;\n        --mdc-icon-button-size: 18px;\n      }\n\n      .chip-list {\n        display: grid;\n        align-items: center;\n        grid-template-columns: 24px auto 112px;\n        grid-template-areas:\n          'arrow-up chips-up action-up'\n          'horizontal horizontal horizontal'\n          'arrow-down chips-down action-down';\n        grid-gap: 0 var(--padding-small);\n      }\n\n      .action-up {\n        grid-area: action-up;\n      }\n\n      .action-down {\n        grid-area: action-down;\n      }\n\n      .arrow-up {\n        width: 24px;\n        height: 24px;\n        transform: rotate(-90deg);\n        grid-area: arrow-up;\n      }\n\n      .arrow-down {\n        width: 24px;\n        height: 24px;\n        transform: rotate(90deg);\n        grid-area: arrow-down;\n      }\n\n      .chips-up {\n        display: flex;\n        align-items: center;\n        flex-flow: wrap;\n        gap: 8px;\n        grid-area: chips-up;\n      }\n\n      .chips-down {\n        display: flex;\n        flex-flow: wrap;\n        gap: 8px;\n        grid-area: chips-down;\n      }\n\n      .horizontal {\n        grid-area: horizontal;\n      }\n\n      .chip-text {\n        font-size: 12px;\n        margin: 0 8px;\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n    `,\n  ];\n\n  @query('mwc-menu')\n  menu!: Menu;\n\n  @query('.input')\n  input!: HTMLInputElement;\n\n  @property({ type: String })\n  icon = '';\n\n  @property({ type: Array })\n  all: any[] = [];\n\n  @state()\n  additional: any[] = [];\n\n  @state()\n  selectedSet = new Set<any>();\n\n  initialSet = new Set<any>();\n\n  addedSet = new Set<any>();\n\n  removedSet = new Set<any>();\n\n  get added() {\n    return Array.from(this.addedSet);\n  }\n\n  get removed() {\n    return Array.from(this.removedSet);\n  }\n\n  get selected() {\n    return Array.from(this.selectedSet);\n  }\n\n  set selected(value: any[]) {\n    this.addedSet = new Set<any>();\n    this.removedSet = new Set<any>();\n    this.initialSet = new Set(value);\n    this.selectedSet = new Set(value);\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <div class=\"container\">\n        ${this.getSelectedItems()}\n        <input\n          type=\"text\"\n          class=\"input\"\n          placeholder=\"${msg(`HinzufÃ¼gen...`)}\"\n          ?hidden=\"${this.all.length === this.selectedSet.size}\"\n          @blur=\"${this.clearInput}\"\n          @focus=\"${this.showMenu}\"\n          @input=\"${this.changeInput}\"\n        />\n        ${this.getAdditionalItems()}\n      </div>\n    `;\n  }\n\n  private getSelectedItems(): TemplateResult {\n    return html`${Array.from(this.selectedSet).map(\n      (item: any) =>\n        html` <fwc-chip\n            icon=\"${this.icon}\"\n            text=\"${item.name}\"\n            @remove=\"${() => this.delete(item)}\"\n            action\n          ></fwc-chip>`\n    )}`;\n  }\n\n  private getAdditionalItems(): TemplateResult {\n    this.additional = this.filteredItems();\n\n    return html`<mwc-menu\n      defaultFocus=\"NONE\"\n      ?hidden=\"${this.additional.length === 0 ||\n      this.all.length === this.selectedSet.size}\"\n      @action=\"${this.add}\"\n      >${this.additional.map(\n        (item: any) =>\n          html`<mwc-list-item>\n            <span>${item.name}</span>\n          </mwc-list-item>`\n      )}\n    </mwc-menu>`;\n  }\n\n  private clearInput() {\n    this.input.value = '';\n  }\n\n  private changeInput() {\n    this.menu.show();\n    this.requestUpdate();\n  }\n\n  private showMenu() {\n    setTimeout(() => {\n      this.menu.show();\n    }, 100);\n  }\n\n  private filteredItems() {\n    return this.all\n      .filter((item) => !this.selectedSet.has(item))\n      .filter(\n        (item) =>\n          item.name.search(new RegExp(`${this.input?.value || ''}.*`, 'i')) !==\n          -1\n      );\n  }\n\n  private add(event: CustomEvent) {\n    const item = this.additional[event.detail.index];\n\n    if (this.initialSet.has(item)) {\n      this.removedSet.delete(item);\n    } else {\n      this.addedSet.add(item);\n    }\n\n    this.selectedSet.add(item);\n    this.input.value = '';\n\n    this.requestUpdate();\n  }\n\n  private delete(item: any) {\n    if (this.addedSet.has(item)) {\n      this.addedSet.delete(item);\n    } else {\n      this.removedSet.add(item);\n    }\n\n    this.selectedSet.delete(item);\n    this.requestUpdate();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'fwc-chip-list': ChipList;\n  }\n}\n"]}