{"version":3,"file":"base.js","sourceRoot":"","sources":["base.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,QAAQ,CAAC;AAE5B,MAAM,MAAM,GAAG,KAAK,EAAE,GAAW,EAAmB,EAAE;IACpD,aAAa;IACb,MAAM,WAAW,GAAG,MAAM,MAAM,CAAC,wBAAwB,CAAC,CAAC;IAE3D,MAAM,OAAO,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;IACjC,IAAI,CAAC,OAAO,EAAE;QACZ,sCAAsC;QACtC,OAAO,CAAC,IAAI,CAAC,8BAA8B,GAAG,EAAE,CAAC,CAAC;QAClD,OAAO,GAAG,CAAC;KACZ;IAED,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC;AAEF,MAAM,UAAU,GAAG,CAAC,SAAkB,EAAU,EAAE,CAChD,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AAE1D,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC","sourcesContent":["import moment from 'moment';\n\nconst dynMsg = async (key: string): Promise<string> => {\n  // @ts-ignore\n  const dynMessages = await import('./client/i18n/messages');\n\n  const message = dynMessages[key];\n  if (!message) {\n    // eslint-disable-next-line no-console\n    console.warn(`Dynamic message not found: ${key}`);\n    return key;\n  }\n\n  return message;\n};\n\nconst formatDate = (timestamp?: number): string =>\n  timestamp ? moment(timestamp).format('DD.MM.YYYY') : '';\n\nexport { dynMsg, formatDate };\n"]}